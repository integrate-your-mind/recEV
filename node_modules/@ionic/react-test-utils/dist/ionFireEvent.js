"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("@testing-library/react");
function ionBlur(element) {
    react_1.fireEvent(element, new CustomEvent('ionBlur'));
}
function ionCancel(element) {
    react_1.fireEvent(element, new CustomEvent('ionCancel'));
}
function ionChange(element, value) {
    react_1.fireEvent(element, new CustomEvent('ionChange', {
        detail: {
            value
        }
    }));
}
function ionDidClose(element) {
    react_1.fireEvent(element, new CustomEvent('ionDidClose'));
}
function ionDrag(element, amount, drag) {
    react_1.fireEvent(element, new CustomEvent('ionDrag', {
        detail: {
            amount,
            drag
        }
    }));
}
function ionDidOpen(element) {
    react_1.fireEvent(element, new CustomEvent('ionDidOpen'));
}
function ionFocus(element) {
    react_1.fireEvent(element, new CustomEvent('ionFocus'));
}
function ionInput(element, value) {
    react_1.fireEvent(element, new CustomEvent('ionInput', {
        detail: {
            value
        }
    }));
}
function ionPull(element) {
    react_1.fireEvent(element, new CustomEvent('ionPull'));
}
function ionRefresh(element, complete) {
    react_1.fireEvent(element, new CustomEvent('ionRefresh', {
        detail: {
            complete
        }
    }));
}
function ionScrollEnd(element) {
    react_1.fireEvent(element, new CustomEvent('ionScrollEnd', {
        detail: {
            isScrolling: false
        }
    }));
}
function ionScrollStart(element) {
    react_1.fireEvent(element, new CustomEvent('ionScrollStart', {
        detail: {
            isScrolling: true
        }
    }));
}
function ionSelect(element, value, checked) {
    react_1.fireEvent(element, new CustomEvent('ionSelect', {
        detail: {
            value,
            checked
        }
    }));
}
function ionStart(element) {
    react_1.fireEvent(element, new CustomEvent('ionStart'));
}
function ionSwipe(element, side) {
    react_1.fireEvent(element, new CustomEvent('ionSwipe', {
        detail: {
            side
        }
    }));
}
function ionWillClose(element) {
    react_1.fireEvent(element, new CustomEvent('ionWillClose'));
}
function ionWillOpen(element) {
    react_1.fireEvent(element, new CustomEvent('ionWillOpen'));
}
exports.ionFireEvent = Object.assign(react_1.fireEvent, {
    ionBlur,
    ionCancel,
    ionChange,
    ionDidClose,
    ionDrag,
    ionDidOpen,
    ionFocus,
    ionInput,
    ionPull,
    ionRefresh,
    ionScrollEnd,
    ionScrollStart,
    ionSelect,
    ionStart,
    ionSwipe,
    ionWillClose,
    ionWillOpen
});
//# sourceMappingURL=ionFireEvent.js.map